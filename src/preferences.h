#pragma once

// DO NOT EDIT THIS FILE
// This file was automatically generated by configuration-parser
// There will be a .conf file somewhere which was used to generate this file
// See https://github.com/tcanabrava/configuration-parser

#include <functional>
#include <QObject>

class General : public QObject {
	Q_OBJECT
	Q_PROPERTY(int beats_per_minute READ beatsPerMinute WRITE setBeatsPerMinute NOTIFY beatsPerMinuteChanged)

public:
	General(QObject *parent = 0);
	 void loadDefaults();
	int beatsPerMinute() const;
	void setBeatsPerMinuteRule(std::function<bool(int)> rule);

public slots:
	void setBeatsPerMinute(int value);

signals:
	void beatsPerMinuteChanged(int value);

private:
	int _beatsPerMinute;
	std::function<bool(int)> beatsPerMinuteRule;
};

class Preferences : public QObject {
	Q_OBJECT
Q_PROPERTY(QObject* general MEMBER _general CONSTANT)

public:
	void sync();
	void load();
	static Preferences* self();
	 void loadDefaults();
	General *general() const;

private:
	General *_general;
	Preferences(QObject *parent = 0);
};

